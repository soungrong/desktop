{
  "name": "standard-notes",
  "main": "./app/dist/index.js",
  "version": "3.0.6",
  "license": "AGPL-3.0-or-later",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-preset-es2015": "^6.24.1",
    "electron": "1.8.4",
    "electron-builder": "20.13.3",
    "7zip-bin-linux": "^1.3.1"
  },
  "build": {
    "appId": "org.standardnotes.standardnotes",
    "files": [
      "compiled/**/*",
      "vendor/**/*",
      "dist/**/*",
      "stylesheets/**/*",
      "assets/**/*",
      "icon/**/*",
      "node_modules/standard-notes-web/dist/**/*"
    ],
    "mac": {
      "category": "public.app-category.productivity"
    },
    "win": {
      "certificateSubjectName": "Standard Notes Ltd.",
      "publisherName": "Standard Notes Ltd."
    },
    "linux": {
      "category": "Office",
      "icon": "build/icon/",
      "desktop": {
        "StartupWMClass": "standard notes"
      },
      "target": [
        "AppImage"
      ]
    }
  },
  "scripts": {
    "pack": "build --dir",
    "release": "npm run setup && npm run build && electron-builder -mwl --x64 --ia32",
    "build-linux": "npm run build && electron-builder -l --x64 --ia32",
    "build-beta": "npm run build && electron-builder -mwl --x64 --ia32 --publish=always --em.productName='Standard Notes (Beta)' --em.appId=org.standardnotes.standardnotes.beta",
    "dist": "npm run build && electron-builder -mwl --x64 --ia32",
    "dist-win": "npm run build && electron-builder -w --x64 --ia32",
    "dist-mac": "npm run build && electron-builder -m",
    "dist-linux": "npm run build && electron-builder -l --x64 --ia32",
    "postinstall": "electron-builder install-app-deps",
    "build": "rimraf app/dist/ && babel ./app --out-dir app/dist/ --ignore ./app/vendor,./app/extensions,./app/compiled,./app/assets,./app/stylesheets,./app/dist,./node_modules,./.babelrc,./package.json,./npm-debug.log --copy-files && cp -a ./app/extensions ./app/dist/ && cp -a ./app/vendor/ ./app/dist/vendor && cp -a ./app/node_modules/standard-notes-web/dist/ ./app/dist/standard-notes-web/",
    "start": "npm run build && electron . --enable-logging --icon _icon/icon.png",
    "setup": "npm install && npm --prefix ./app install ./app && git submodule update --init --force --remote"
  }
}
